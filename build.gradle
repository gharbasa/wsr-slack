/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'abed.ali' at '7/26/17 9:16 AM' with Gradle 2.12
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.12/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'groovy'
apply plugin:'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.18'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
    
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    compile 'org.codehaus.groovy.modules.http-builder:http-builder:0.7'
    //compile 'oauth.signpost:signpost-core:1.2.1.2'
    //compile 'oauth.signpost:signpost-commonshttp4:1.2.1.2'
    compile 'ch.qos.logback:logback-classic:1.2.1'

}

task post (dependsOn: 'classes', type: JavaExec) {
    main = 'com.dt.wsr.Post'
    classpath = sourceSets.main.runtimeClasspath
}

task report (dependsOn: 'classes', type: JavaExec) {
    main = 'com.dt.wsr.Report'
    classpath = sourceSets.main.runtimeClasspath
}

task template (dependsOn: 'classes', type: JavaExec) {
    main = 'com.dt.wsr.Template'
    classpath = sourceSets.main.runtimeClasspath
}

